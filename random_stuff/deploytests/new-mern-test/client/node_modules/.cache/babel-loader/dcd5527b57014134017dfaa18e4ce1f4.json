{"ast":null,"code":"var _jsxFileName = \"/Users/patrickreynolds/repos/tests/random_stuff/deploytests/new-mern-test/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.getPasswords = () => {\n      // Get the passwords and store them in state\n      fetch('/api/animals/mammals').then(res => res.json()).then(passwords => this.setState({\n        passwords\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: passwords.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Animals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"passwords\",\n          children: passwords.map((password, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: password\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"more\",\n          onClick: this.getPasswords,\n          children: \"reload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      // Render a helpful message otherwise\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"No passwords :(\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"more\",\n          onClick: this.getPasswords,\n          children: \"Try Again?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","App","getPasswords","fetch","then","res","json","passwords","setState","render","length","map","password","index"],"sources":["/Users/patrickreynolds/repos/tests/random_stuff/deploytests/new-mern-test/client/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  // Initialize state\n\n\n  getPasswords = () => {\n    // Get the passwords and store them in state\n    fetch('/api/animals/mammals')\n      .then(res => res.json())\n      .then(passwords => this.setState({ passwords }));\n  }\n\n    \n\n  render() {\n\n    return (\n      <div className=\"App\">\n        {/* Render the passwords if we have them */}\n        {passwords.length ? (\n          <div>\n            <h1>Animals</h1>\n            <ul className=\"passwords\">\n              {/*\n                Generally it's bad to use \"index\" as a key.\n                It's ok for this example because there will always\n                be the same number of passwords, and they never\n                change positions in the array.\n              */}\n              {passwords.map((password, index) =>\n                <li key={index}>\n                  {password}\n                </li>\n              )}\n            </ul>\n            <button\n              className=\"more\"\n              onClick={this.getPasswords}>\n              reload\n            </button>\n          </div>\n        ) : (\n          // Render a helpful message otherwise\n          <div>\n            <h1>No passwords :(</h1>\n            <button\n              className=\"more\"\n              onClick={this.getPasswords}>\n              Try Again?\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;EAAA;IAAA;;IAAA,KAI1BE,YAJ0B,GAIX,MAAM;MACnB;MACAC,KAAK,CAAC,sBAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,SAAS,IAAI,KAAKC,QAAL,CAAc;QAAED;MAAF,CAAd,CAFrB;IAGD,CATyB;EAAA;;EAa1BE,MAAM,GAAG;IAEP,oBACE;MAAK,SAAS,EAAC,KAAf;MAAA,UAEGF,SAAS,CAACG,MAAV,gBACC;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAI,SAAS,EAAC,WAAd;UAAA,UAOGH,SAAS,CAACI,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,kBACb;YAAA,UACGD;UADH,GAASC,KAAT;YAAA;YAAA;YAAA;UAAA,QADD;QAPH;UAAA;UAAA;UAAA;QAAA,QAFF,eAeE;UACE,SAAS,EAAC,MADZ;UAEE,OAAO,EAAE,KAAKX,YAFhB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAfF;MAAA;QAAA;QAAA;QAAA;MAAA,QADD;MAAA;MAuBC;MACA;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,SAAS,EAAC,MADZ;UAEE,OAAO,EAAE,KAAKA,YAFhB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IA1BJ;MAAA;MAAA;MAAA;IAAA,QADF;EAsCD;;AArDyB;;AAwD5B,eAAeD,GAAf"},"metadata":{},"sourceType":"module"}