{"ast":null,"code":"var _jsxFileName = \"/Users/patrickreynolds/repos/tests/react/react_todo/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Todolist from './Todolist';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { BrowserRouter, routes, Route } from 'react-router-dom'; // apis\n\nimport { getData } from \"./functions/getData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]); //object destructoring\n\n  const todoNameRef = useRef(); // when it forst loads it gets the \n\n  useEffect(() => {\n    getData() // api function\n    .then(res => setTodos(res)).catch(err => console.log(err));\n  }, []); // this is the dependancy array. it means the function will only fetch once\n\n  function handleAddTodo(e) {\n    //adds todo from input\n    const message = todoNameRef.current.value;\n    if (message === '') return;\n    setTodos(todos => {\n      return [...todos, {\n        id: uuidv4(),\n        message: message,\n        complete: false\n      }];\n    });\n    todoNameRef.current.value = null; //wipes textbox\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Todolist, {\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: todoNameRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Clear Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [todos.length, \" left to do \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"52iFtPgzl31SmfSv7XjBgNY9Iv8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Todolist","React","useState","useRef","useEffect","v4","uuidv4","BrowserRouter","routes","Route","getData","App","todos","setTodos","todoNameRef","then","res","catch","err","console","log","handleAddTodo","e","message","current","value","id","complete","length"],"sources":["/Users/patrickreynolds/repos/tests/react/react_todo/client/src/App.js"],"sourcesContent":["import Todolist from './Todolist';\nimport React, {useState, useRef, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { BrowserRouter, routes, Route } from 'react-router-dom'\n\n\n// apis\nimport { getData } from \"./functions/getData\";\n\n\nfunction App() {\n  const [todos, setTodos] = useState([]) //object destructoring\n  const todoNameRef = useRef()\n\n// when it forst loads it gets the \n  useEffect(() => {\n    getData() // api function\n    .then((res) => setTodos(res))\n    .catch((err) => console.log(err));\n  }, []); // this is the dependancy array. it means the function will only fetch once\n\n\n  function handleAddTodo(e) { //adds todo from input\n    const message = todoNameRef.current.value\n    if (message === '') return\n    setTodos(todos => {\n     return [...todos, { id: uuidv4(), message: message, complete: false}]\n  })\n  todoNameRef.current.value = null //wipes textbox\n  }\n\nreturn (\n<>\n  <Todolist todos={todos}/>\n  <input ref={todoNameRef} type=\"text\" />\n  <button onClick={handleAddTodo}>Add Todo</button>\n  <button>Clear Complete</button>\n  <div>{todos.length} left to do </div>\n</> \n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAkD,OAAlD;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C,C,CAGA;;AACA,SAASC,OAAT,QAAwB,qBAAxB;;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC,CADa,CAC0B;;EACvC,MAAMY,WAAW,GAAGX,MAAM,EAA1B,CAFa,CAIf;;EACEC,SAAS,CAAC,MAAM;IACdM,OAAO,GAAG;IAAH,CACNK,IADD,CACOC,GAAD,IAASH,QAAQ,CAACG,GAAD,CADvB,EAECC,KAFD,CAEQC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;EAGD,CAJQ,EAIN,EAJM,CAAT,CALa,CASL;;EAGR,SAASG,aAAT,CAAuBC,CAAvB,EAA0B;IAAE;IAC1B,MAAMC,OAAO,GAAGT,WAAW,CAACU,OAAZ,CAAoBC,KAApC;IACA,IAAIF,OAAO,KAAK,EAAhB,EAAoB;IACpBV,QAAQ,CAACD,KAAK,IAAI;MACjB,OAAO,CAAC,GAAGA,KAAJ,EAAW;QAAEc,EAAE,EAAEpB,MAAM,EAAZ;QAAgBiB,OAAO,EAAEA,OAAzB;QAAkCI,QAAQ,EAAE;MAA5C,CAAX,CAAP;IACF,CAFS,CAAR;IAGFb,WAAW,CAACU,OAAZ,CAAoBC,KAApB,GAA4B,IAA5B,CAN0B,CAMO;EAChC;;EAEH,oBACA;IAAA,wBACE,QAAC,QAAD;MAAU,KAAK,EAAEb;IAAjB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,GAAG,EAAEE,WAAZ;MAAyB,IAAI,EAAC;IAA9B;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAEO,aAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAA,WAAMT,KAAK,CAACgB,MAAZ;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA,gBADA;AASC;;GA9BQjB,G;;KAAAA,G;AAgCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}