{"ast":null,"code":"var _jsxFileName = \"/Users/patrickreynolds/repos/tests/react/react_todo/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Todolist from \"./Todolist\";\nimport React, { useState, useRef, useEffect } from \"react\"; // import { v4 as uuidv4 } from 'uuid';\n// import { BrowserRouter, routes, Route } from \"react-router-dom\";\n// apis\n\nimport { getData } from \"./functions/getData\";\nimport { addTodo } from \"./functions/addTodo\";\nimport { updateChecked } from \"./functions/updatechecked\";\nimport { deleteTodos } from \"./functions/deleteTodos\";\nimport { deleteCompleted } from \"./functions/deleteCompleted\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [value, setValue] = useState([]);\n  const [todos, setTodos] = useState([]); //object destructoring\n\n  const todoNameRef = useRef();\n\n  const pullTodos = () => {\n    getData() // api function\n    .then(res => setTodos(res)).catch(err => console.log(err));\n  }; // when it first loads it gets the db todos\n\n\n  useEffect(() => {\n    pullTodos();\n  }, []); // this is the dependancy array. it means the function will run everytime the todos array is changed\n  //adds todo from input\n\n  const handleAddTodo = async e => {\n    const message = todoNameRef.current.value;\n    if (message === \"\") return;\n    const newTodo = {\n      message: message,\n      complete: false\n    };\n    setTodos(todos => {\n      return [...todos, newTodo];\n    }); //add newTodo to DB\n\n    addTodo(newTodo); //wipes textbox\n\n    todoNameRef.current.value = null;\n    console.log(todos);\n    pullTodos();\n  }; //update the complete props in the todo via checkbox and upload to db\n\n\n  const toggleComplete = id => {\n    // patch\n    updateChecked(id); //update todos\n\n    pullTodos();\n  };\n\n  const onChange = _ref => {\n    let {\n      target\n    } = _ref;\n    return setValue(target.todos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Todolist, {\n      todos: todos,\n      toggleComplete: toggleComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: todoNameRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        deleteCompleted();\n        pullTodos();\n      },\n      children: \"Clear Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        deleteTodos();\n        pullTodos();\n      },\n      children: \"Delete all!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", todos.filter(value => value.complete === !true).length, \" left to do \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"nWRGTjTGDPsLmzaxE/QOXnVwgnI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Todolist","React","useState","useRef","useEffect","getData","addTodo","updateChecked","deleteTodos","deleteCompleted","App","value","setValue","todos","setTodos","todoNameRef","pullTodos","then","res","catch","err","console","log","handleAddTodo","e","message","current","newTodo","complete","toggleComplete","id","onChange","target","filter","length"],"sources":["/Users/patrickreynolds/repos/tests/react/react_todo/client/src/App.js"],"sourcesContent":["import Todolist from \"./Todolist\";\nimport React, { useState, useRef, useEffect } from \"react\";\n// import { v4 as uuidv4 } from 'uuid';\n// import { BrowserRouter, routes, Route } from \"react-router-dom\";\n\n// apis\nimport { getData } from \"./functions/getData\";\nimport { addTodo } from \"./functions/addTodo\";\nimport { updateChecked } from \"./functions/updatechecked\";\nimport { deleteTodos } from \"./functions/deleteTodos\";\nimport { deleteCompleted } from \"./functions/deleteCompleted\";\n\nfunction App() {\n  const [value, setValue] = useState([]);\n  const [todos, setTodos] = useState([]); //object destructoring\n  const todoNameRef = useRef();\n\n  \n  const pullTodos = () => {\n    getData() // api function\n      .then((res) => setTodos(res))\n      .catch((err) => console.log(err));\n  }\n\n  // when it first loads it gets the db todos\n  useEffect(() => {\n    pullTodos();\n  }, []); // this is the dependancy array. it means the function will run everytime the todos array is changed\n  \n  \n\n\n  //adds todo from input\n  const handleAddTodo = async (e) => {\n    const message = todoNameRef.current.value;\n    if (message === \"\") return;\n    const newTodo = { message: message, complete: false };\n    setTodos((todos) => {\n      return [...todos, newTodo];\n    });\n    //add newTodo to DB\n    addTodo(newTodo);\n    //wipes textbox\n    todoNameRef.current.value = null; \n    \n    console.log(todos);\n    pullTodos()\n    \n  };\n\n  //update the complete props in the todo via checkbox and upload to db\n  const toggleComplete = (id) => {\n    // patch\n    updateChecked(id);\n    //update todos\n    pullTodos()\n  };\n\n  const onChange = ({ target }) => setValue(target.todos);\n\n  return (\n    <>\n      <Todolist todos={todos} toggleComplete={toggleComplete}  />\n      <input ref={todoNameRef} type=\"text\" />\n      <button onClick={handleAddTodo}>Add Todo</button>\n      <button onClick={() => {deleteCompleted(); pullTodos();}}>Clear Complete</button>\n      <button onClick={() => {deleteTodos(); pullTodos();}}>Delete all!!!</button>\n      <div> {todos.filter(value => value.complete === !true).length} left to do </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD,C,CACA;AACA;AAEA;;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,eAAT,QAAgC,6BAAhC;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC,CAFa,CAE2B;;EACxC,MAAMa,WAAW,GAAGZ,MAAM,EAA1B;;EAGA,MAAMa,SAAS,GAAG,MAAM;IACtBX,OAAO,GAAG;IAAH,CACJY,IADH,CACSC,GAAD,IAASJ,QAAQ,CAACI,GAAD,CADzB,EAEGC,KAFH,CAEUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;EAGD,CAJD,CANa,CAYb;;;EACAhB,SAAS,CAAC,MAAM;IACdY,SAAS;EACV,CAFQ,EAEN,EAFM,CAAT,CAba,CAeL;EAKR;;EACA,MAAMO,aAAa,GAAG,MAAOC,CAAP,IAAa;IACjC,MAAMC,OAAO,GAAGV,WAAW,CAACW,OAAZ,CAAoBf,KAApC;IACA,IAAIc,OAAO,KAAK,EAAhB,EAAoB;IACpB,MAAME,OAAO,GAAG;MAAEF,OAAO,EAAEA,OAAX;MAAoBG,QAAQ,EAAE;IAA9B,CAAhB;IACAd,QAAQ,CAAED,KAAD,IAAW;MAClB,OAAO,CAAC,GAAGA,KAAJ,EAAWc,OAAX,CAAP;IACD,CAFO,CAAR,CAJiC,CAOjC;;IACArB,OAAO,CAACqB,OAAD,CAAP,CARiC,CASjC;;IACAZ,WAAW,CAACW,OAAZ,CAAoBf,KAApB,GAA4B,IAA5B;IAEAU,OAAO,CAACC,GAAR,CAAYT,KAAZ;IACAG,SAAS;EAEV,CAfD,CArBa,CAsCb;;;EACA,MAAMa,cAAc,GAAIC,EAAD,IAAQ;IAC7B;IACAvB,aAAa,CAACuB,EAAD,CAAb,CAF6B,CAG7B;;IACAd,SAAS;EACV,CALD;;EAOA,MAAMe,QAAQ,GAAG;IAAA,IAAC;MAAEC;IAAF,CAAD;IAAA,OAAgBpB,QAAQ,CAACoB,MAAM,CAACnB,KAAR,CAAxB;EAAA,CAAjB;;EAEA,oBACE;IAAA,wBACE,QAAC,QAAD;MAAU,KAAK,EAAEA,KAAjB;MAAwB,cAAc,EAAEgB;IAAxC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,GAAG,EAAEd,WAAZ;MAAyB,IAAI,EAAC;IAA9B;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAEQ,aAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAQ,OAAO,EAAE,MAAM;QAACd,eAAe;QAAIO,SAAS;MAAI,CAAxD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAQ,OAAO,EAAE,MAAM;QAACR,WAAW;QAAIQ,SAAS;MAAI,CAApD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALF,eAME;MAAA,gBAAOH,KAAK,CAACoB,MAAN,CAAatB,KAAK,IAAIA,KAAK,CAACiB,QAAN,KAAmB,CAAC,IAA1C,EAAgDM,MAAvD;IAAA;MAAA;MAAA;MAAA;IAAA,QANF;EAAA,gBADF;AAUD;;GA1DQxB,G;;KAAAA,G;AA4DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}