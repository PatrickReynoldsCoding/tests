{"ast":null,"code":"var _jsxFileName = \"/Users/patrickreynolds/repos/tests/react/react_todo/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Todolist from \"./Todolist\";\nimport React, { useState, useRef, useEffect } from \"react\"; // import { v4 as uuidv4 } from 'uuid';\n\nimport { BrowserRouter, routes, Route } from \"react-router-dom\"; // apis\n\nimport { getData } from \"./functions/getData\";\nimport { addTodo } from \"./functions/addTodo\";\nimport { deleteTodos } from \"./functions/deleteTodos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]); //object destructoring\n\n  const todoNameRef = useRef(); // when it first loads it gets the db todos\n\n  useEffect(() => {\n    getData() // api function\n    .then(res => setTodos(res)).catch(err => console.log(err));\n  }, [todos]); // this is the dependancy array. it means the function will run everytime the todos array is changed\n  // add useEffect here to save todos to DB when there is any change.\n\n  const handleAddTodo = async e => {\n    //adds todo from input\n    const message = todoNameRef.current.value;\n    if (message === \"\") return;\n    const newTodo = {\n      message: message,\n      complete: false\n    };\n    setTodos(todos => {\n      return [...todos, newTodo];\n    }); //add newTodo to DB\n\n    addTodo(newTodo);\n    todoNameRef.current.value = null; //wipes textbox\n    // saveTodosToDB\n\n    console.log(todos);\n  }; //update the complete props in the todo via checkbox and upload to db\n\n\n  const toggleComplete = id => {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo._id === id);\n    console.log(newTodos);\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n    delete console.log(todos); // ??? then delete all todos and set todos collection to the value of todos\n  }; // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Todolist, {\n      todos: todos,\n      toggleComplete: toggleComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: todoNameRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Clear Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [todos.length, \" left to do \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"52iFtPgzl31SmfSv7XjBgNY9Iv8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Todolist","React","useState","useRef","useEffect","BrowserRouter","routes","Route","getData","addTodo","deleteTodos","App","todos","setTodos","todoNameRef","then","res","catch","err","console","log","handleAddTodo","e","message","current","value","newTodo","complete","toggleComplete","id","newTodos","todo","find","_id","length"],"sources":["/Users/patrickreynolds/repos/tests/react/react_todo/client/src/App.js"],"sourcesContent":["import Todolist from \"./Todolist\";\nimport React, { useState, useRef, useEffect } from \"react\";\n// import { v4 as uuidv4 } from 'uuid';\nimport { BrowserRouter, routes, Route } from \"react-router-dom\";\n\n// apis\nimport { getData } from \"./functions/getData\";\nimport { addTodo } from \"./functions/addTodo\";\nimport { deleteTodos } from \"./functions/deleteTodos\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]); //object destructoring\n  const todoNameRef = useRef();\n\n  // when it first loads it gets the db todos\n  useEffect(() => {\n    getData() // api function\n      .then((res) => setTodos(res))\n      .catch((err) => console.log(err));\n  }, [todos]); // this is the dependancy array. it means the function will run everytime the todos array is changed\n\n  // add useEffect here to save todos to DB when there is any change.\n\n  const handleAddTodo = async (e) => {\n    //adds todo from input\n    const message = todoNameRef.current.value;\n    if (message === \"\") return;\n    const newTodo = { message: message, complete: false };\n    setTodos((todos) => {\n      return [...todos, newTodo];\n    });\n    //add newTodo to DB\n    addTodo(newTodo);\n\n    todoNameRef.current.value = null; //wipes textbox\n    // saveTodosToDB\n    console.log(todos);\n  };\n\n  //update the complete props in the todo via checkbox and upload to db\n  const toggleComplete = (id) => {\n    const newTodos = [...todos];\n    const todo = newTodos.find((todo) => todo._id === id);\n    console.log(newTodos);\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n    delete\n    console.log(todos);\n    // ??? then delete all todos and set todos collection to the value of todos\n  };\n\n  // }\n\n  return (\n    <>\n      <Todolist todos={todos} toggleComplete={toggleComplete} />\n      <input ref={todoNameRef} type=\"text\" />\n      <button onClick={handleAddTodo}>Add Todo</button>\n      <button>Clear Complete</button>\n      <div>{todos.length} left to do </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD,C,CACA;;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C,C,CAEA;;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC,CADa,CAC2B;;EACxC,MAAMY,WAAW,GAAGX,MAAM,EAA1B,CAFa,CAIb;;EACAC,SAAS,CAAC,MAAM;IACdI,OAAO,GAAG;IAAH,CACJO,IADH,CACSC,GAAD,IAASH,QAAQ,CAACG,GAAD,CADzB,EAEGC,KAFH,CAEUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;EAGD,CAJQ,EAIN,CAACN,KAAD,CAJM,CAAT,CALa,CASA;EAEb;;EAEA,MAAMS,aAAa,GAAG,MAAOC,CAAP,IAAa;IACjC;IACA,MAAMC,OAAO,GAAGT,WAAW,CAACU,OAAZ,CAAoBC,KAApC;IACA,IAAIF,OAAO,KAAK,EAAhB,EAAoB;IACpB,MAAMG,OAAO,GAAG;MAAEH,OAAO,EAAEA,OAAX;MAAoBI,QAAQ,EAAE;IAA9B,CAAhB;IACAd,QAAQ,CAAED,KAAD,IAAW;MAClB,OAAO,CAAC,GAAGA,KAAJ,EAAWc,OAAX,CAAP;IACD,CAFO,CAAR,CALiC,CAQjC;;IACAjB,OAAO,CAACiB,OAAD,CAAP;IAEAZ,WAAW,CAACU,OAAZ,CAAoBC,KAApB,GAA4B,IAA5B,CAXiC,CAWC;IAClC;;IACAN,OAAO,CAACC,GAAR,CAAYR,KAAZ;EACD,CAdD,CAba,CA6Bb;;;EACA,MAAMgB,cAAc,GAAIC,EAAD,IAAQ;IAC7B,MAAMC,QAAQ,GAAG,CAAC,GAAGlB,KAAJ,CAAjB;IACA,MAAMmB,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAeD,IAAD,IAAUA,IAAI,CAACE,GAAL,KAAaJ,EAArC,CAAb;IACAV,OAAO,CAACC,GAAR,CAAYU,QAAZ;IACAC,IAAI,CAACJ,QAAL,GAAgB,CAACI,IAAI,CAACJ,QAAtB;IACAd,QAAQ,CAACiB,QAAD,CAAR;IACA,OACAX,OAAO,CAACC,GAAR,CAAYR,KAAZ,CADA,CAN6B,CAQ7B;EACD,CATD,CA9Ba,CAyCb;;;EAEA,oBACE;IAAA,wBACE,QAAC,QAAD;MAAU,KAAK,EAAEA,KAAjB;MAAwB,cAAc,EAAEgB;IAAxC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,GAAG,EAAEd,WAAZ;MAAyB,IAAI,EAAC;IAA9B;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAEO,aAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAA,WAAMT,KAAK,CAACsB,MAAZ;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA,gBADF;AASD;;GApDQvB,G;;KAAAA,G;AAsDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}