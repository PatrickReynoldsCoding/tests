{"ast":null,"code":"var _jsxFileName = \"/Users/patrickreynolds/repos/tests/react/react_todo/client/src/App.js\",\n    _s2 = $RefreshSig$();\n\nimport Todolist from \"./Todolist\";\nimport React, { useState, useRef, useEffect } from \"react\"; // import { v4 as uuidv4 } from 'uuid';\n\nimport { BrowserRouter, routes, Route } from \"react-router-dom\"; // apis\n\nimport { getData } from \"./functions/getData\";\nimport { addTodo } from \"./functions/addTodo\";\nimport { updateChecked } from \"./functions/updatechecked\";\nimport { deleteTodos } from \"./functions/deleteTodos\";\nimport { deleteCompleted } from \"./functions/deleteCompleted\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [todos, setTodos] = useState([]); //object destructoring\n\n  const todoNameRef = useRef(); // when it first loads it gets the db todos\n\n  const pullTodos = () => {\n    _s();\n\n    useEffect(() => {\n      getData() // api function\n      .then(res => setTodos(res)).catch(err => console.log(err));\n    }, []); // this is the dependancy array. it means the function will run everytime the todos array is changed\n  };\n\n  _s(pullTodos, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  use.pullTodos(); //adds todo from input\n\n  const handleAddTodo = async e => {\n    const message = todoNameRef.current.value;\n    if (message === \"\") return;\n    const newTodo = {\n      message: message,\n      complete: false\n    };\n    setTodos(todos => {\n      return [...todos, newTodo];\n    }); //add newTodo to DB\n\n    addTodo(newTodo); //wipes textbox\n\n    todoNameRef.current.value = null;\n    console.log(todos);\n  }; //update the complete props in the todo via checkbox and upload to db\n\n\n  const toggleComplete = id => {\n    // patch\n    updateChecked(id);\n    getData() // api function\n    .then(res => setTodos(res)).catch(err => console.log(err));\n  }; // counts the remaining todos left to complete\n\n\n  const countRemaining = () => {\n    return todos.filter(value => value.complete === !true).length;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Todolist, {\n      todos: todos,\n      toggleComplete: toggleComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: todoNameRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteCompleted,\n      children: \"Clear Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteTodos,\n      children: \"Delete all!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", todos.filter(value => value.complete === !true).length, \" left to do \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(App, \"Co+oX9O3pMnlY40DokhjoAfbhpA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Todolist","React","useState","useRef","useEffect","BrowserRouter","routes","Route","getData","addTodo","updateChecked","deleteTodos","deleteCompleted","App","todos","setTodos","todoNameRef","pullTodos","then","res","catch","err","console","log","use","handleAddTodo","e","message","current","value","newTodo","complete","toggleComplete","id","countRemaining","filter","length"],"sources":["/Users/patrickreynolds/repos/tests/react/react_todo/client/src/App.js"],"sourcesContent":["import Todolist from \"./Todolist\";\nimport React, { useState, useRef, useEffect } from \"react\";\n// import { v4 as uuidv4 } from 'uuid';\nimport { BrowserRouter, routes, Route } from \"react-router-dom\";\n\n// apis\nimport { getData } from \"./functions/getData\";\nimport { addTodo } from \"./functions/addTodo\";\nimport { updateChecked } from \"./functions/updatechecked\";\nimport { deleteTodos } from \"./functions/deleteTodos\";\nimport { deleteCompleted } from \"./functions/deleteCompleted\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]); //object destructoring\n  const todoNameRef = useRef();\n\n  // when it first loads it gets the db todos\n  const pullTodos = () => {\n    useEffect(() => {\n      getData() // api function\n        .then((res) => setTodos(res))\n        .catch((err) => console.log(err));\n    }, []); // this is the dependancy array. it means the function will run everytime the todos array is changed\n  }\n  \n  use.pullTodos();\n\n  //adds todo from input\n  const handleAddTodo = async (e) => {\n    const message = todoNameRef.current.value;\n    if (message === \"\") return;\n    const newTodo = { message: message, complete: false };\n    setTodos((todos) => {\n      return [...todos, newTodo];\n    });\n    //add newTodo to DB\n    addTodo(newTodo);\n    //wipes textbox\n    todoNameRef.current.value = null; \n    \n    console.log(todos);\n  };\n\n  //update the complete props in the todo via checkbox and upload to db\n  const toggleComplete = (id) => {\n    // patch\n    updateChecked(id);\n    getData() // api function\n    .then((res) => setTodos(res))\n    .catch((err) => console.log(err));\n  };\n\n  // counts the remaining todos left to complete\n  const countRemaining = () => {\n    return todos.filter(value => value.complete === !true).length\n  }\n\n  \n\n  return (\n    <>\n      <Todolist todos={todos} toggleComplete={toggleComplete} />\n      <input ref={todoNameRef} type=\"text\" />\n      <button onClick={handleAddTodo}>Add Todo</button>\n      <button onClick={deleteCompleted}>Clear Complete</button>\n      <button onClick={deleteTodos}>Delete all!!!</button>\n      <div> {todos.filter(value => value.complete === !true).length} left to do </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}