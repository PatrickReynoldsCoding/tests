{"ast":null,"code":"var _jsxFileName = \"/Users/patrickreynolds/repos/tests/react/react_todo/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Todolist from './Todolist';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { BrowserRouter, routes, Route } from 'react-router-dom'; // apis\n\nimport { getData } from \"./functions/getData\"; // function App() {\n// \tconst [data, setData] = useState([]);\n// \tuseEffect(() => {\n// \t\tgetData()\n// \t\t\t.then((res) => setData(res.message))\n// \t\t\t.catch((err) => console.log(err));\n// \t}, []);\n// \treturn (\n// \t\t<div className=\"App\">\n// \t\t\t<h1>{data}</h1>\n// \t\t</div>\n// \t);\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]); //object destructoring\n  // const todoNameRef = useRef()\n  // const todoListRef = useRef()\n  // function clearList() {\n  //   todoListRef.current = []\n  // }\n\n  useEffect(() => {\n    getData() // api function\n    .then(res => setTodos(res.message)).catch(err => console.log(err));\n  }, []); // this is the dependancy array. it means the function will only fetch once\n  // function handleAddTodo(e) {\n  //   const name = todoNameRef.current.value\n  //   if (name === '') return\n  //   setTodos(todos => {\n  //    return [...todos, { id: uuidv4(), name: name, complete: false}]\n  // })\n  // todoNameRef.current.value = null //wipes textbox\n  // }\n\n  return (\n    /*#__PURE__*/\n    // <div className=\"App\">\n    //   <h1>{todos}</h1>\n    // </div>\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Todolist, {\n        todos: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: todoNameRef,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTodo,\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Clear Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [todos.length, \" left to do \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true)\n  );\n}\n\n_s(App, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Todolist","React","useState","useRef","useEffect","v4","uuidv4","BrowserRouter","routes","Route","getData","App","todos","setTodos","then","res","message","catch","err","console","log","todoNameRef","handleAddTodo","length"],"sources":["/Users/patrickreynolds/repos/tests/react/react_todo/client/src/App.js"],"sourcesContent":["import Todolist from './Todolist';\nimport React, {useState, useRef, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { BrowserRouter, routes, Route } from 'react-router-dom'\n\n\n// apis\nimport { getData } from \"./functions/getData\";\n\n// function App() {\n// \tconst [data, setData] = useState([]);\n\n// \tuseEffect(() => {\n// \t\tgetData()\n// \t\t\t.then((res) => setData(res.message))\n// \t\t\t.catch((err) => console.log(err));\n// \t}, []);\n\n// \treturn (\n// \t\t<div className=\"App\">\n// \t\t\t<h1>{data}</h1>\n// \t\t</div>\n// \t);\n// }\n\n\nfunction App() {\n  const [todos, setTodos] = useState([]) //object destructoring\n  // const todoNameRef = useRef()\n  // const todoListRef = useRef()\n\n  // function clearList() {\n  //   todoListRef.current = []\n  // }\n\n  useEffect(() => {\n    getData() // api function\n    .then((res) => setTodos(res.message))\n    .catch((err) => console.log(err));\n  }, []); // this is the dependancy array. it means the function will only fetch once\n\n\n  // function handleAddTodo(e) {\n  //   const name = todoNameRef.current.value\n  //   if (name === '') return\n  //   setTodos(todos => {\n  //    return [...todos, { id: uuidv4(), name: name, complete: false}]\n  // })\n  // todoNameRef.current.value = null //wipes textbox\n  // }\n\nreturn (\n  // <div className=\"App\">\n  //   <h1>{todos}</h1>\n  // </div>\n<>\n  <Todolist todos={todos}/>\n  <input ref={todoNameRef} type=\"text\" />\n  <button onClick={handleAddTodo}>Add Todo</button>\n  <button>Clear Complete</button>\n  <div>{todos.length} left to do </div>\n</>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAkD,OAAlD;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C,C,CAGA;;AACA,SAASC,OAAT,QAAwB,qBAAxB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC,CADa,CAC0B;EACvC;EACA;EAEA;EACA;EACA;;EAEAE,SAAS,CAAC,MAAM;IACdM,OAAO,GAAG;IAAH,CACNI,IADD,CACOC,GAAD,IAASF,QAAQ,CAACE,GAAG,CAACC,OAAL,CADvB,EAECC,KAFD,CAEQC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;EAGD,CAJQ,EAIN,EAJM,CAAT,CATa,CAaL;EAGR;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEF;IAAA;IACE;IACA;IACA;IACF;MAAA,wBACE,QAAC,QAAD;QAAU,KAAK,EAAEN;MAAjB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,GAAG,EAAES,WAAZ;QAAyB,IAAI,EAAC;MAA9B;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAQ,OAAO,EAAEC,aAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE;QAAA,WAAMV,KAAK,CAACW,MAAZ;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;EAJA;AAYC;;GArCQZ,G;;KAAAA,G;AAuCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}