{"ast":null,"code":"var _jsxFileName = \"/Users/patrickreynolds/repos/tests/react/react_todo/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Todolist from './Todolist';\nimport React, { useState, useRef, useEffect } from 'react'; // import { v4 as uuidv4 } from 'uuid';\n\nimport { BrowserRouter, routes, Route } from 'react-router-dom'; // apis\n\nimport { getData } from \"./functions/getData\";\nimport { addTodo } from './functions/addTodo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]); //object destructoring\n\n  const todoNameRef = useRef(); // when it first loads it gets the db todos\n\n  useEffect(() => {\n    getData() // api function\n    .then(res => setTodos(res)).catch(err => console.log(err));\n  }, [todos]); // this is the dependancy array. it means the function will run everytime the todos array is changed\n\n  const handleAddTodo = async e => {\n    //adds todo from input\n    const message = todoNameRef.current.value;\n    if (message === '') return;\n    const newTodo = {\n      message: message,\n      complete: false\n    };\n    setTodos(todos => {\n      return [...todos, newTodo];\n    }); //add newTodo to DB\n\n    addTodo(newTodo);\n    todoNameRef.current.value = null; //wipes textbox\n    // saveTodosToDB\n\n    console.log(todos);\n  }; //update the complete props in the todo via checkbox and upload to db\n\n\n  const toggleComplete = id => {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n  }; // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Todolist, {\n      todos: todos,\n      toggleComplete: toggleComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: todoNameRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Clear Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [todos.length, \" left to do \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"52iFtPgzl31SmfSv7XjBgNY9Iv8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Todolist","React","useState","useRef","useEffect","BrowserRouter","routes","Route","getData","addTodo","App","todos","setTodos","todoNameRef","then","res","catch","err","console","log","handleAddTodo","e","message","current","value","newTodo","complete","toggleComplete","id","newTodos","todo","find","length"],"sources":["/Users/patrickreynolds/repos/tests/react/react_todo/client/src/App.js"],"sourcesContent":["import Todolist from './Todolist';\nimport React, {useState, useRef, useEffect } from 'react';\n// import { v4 as uuidv4 } from 'uuid';\nimport { BrowserRouter, routes, Route } from 'react-router-dom'\n\n\n// apis\nimport { getData } from \"./functions/getData\";\nimport { addTodo } from './functions/addTodo';\n\n\nfunction App() {\n  const [todos, setTodos] = useState([]) //object destructoring\n  const todoNameRef = useRef()\n\n// when it first loads it gets the db todos\n  useEffect(() => {\n    getData() // api function\n    .then((res) => setTodos(res))\n    .catch((err) => console.log(err));\n  }, [todos]); // this is the dependancy array. it means the function will run everytime the todos array is changed\n\n\n  const handleAddTodo = async (e) => { //adds todo from input\n    const message = todoNameRef.current.value\n    if (message === '') return\n    const newTodo = {message: message, complete: false}\n    setTodos(todos => {\n     return [...todos, newTodo]\n  })\n  //add newTodo to DB\n    addTodo(newTodo)\n\n\n  todoNameRef.current.value = null //wipes textbox\n  // saveTodosToDB\n  console.log(todos)\n  }\n\n\n  //update the complete props in the todo via checkbox and upload to db\n  const toggleComplete = (id) => {\n    const newTodos = [...todos]\n    const todo = newTodos.find(todo => todo.id === id)\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n  }\n\n  // }\n\nreturn (\n<>\n  <Todolist todos={todos} toggleComplete={toggleComplete}/>\n  <input ref={todoNameRef} type=\"text\" />\n  <button onClick={handleAddTodo}>Add Todo</button>\n  <button>Clear Complete</button>\n  <div>{todos.length} left to do </div>\n</> \n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAkD,OAAlD,C,CACA;;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C,C,CAGA;;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,OAAT,QAAwB,qBAAxB;;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC,CADa,CAC0B;;EACvC,MAAMW,WAAW,GAAGV,MAAM,EAA1B,CAFa,CAIf;;EACEC,SAAS,CAAC,MAAM;IACdI,OAAO,GAAG;IAAH,CACNM,IADD,CACOC,GAAD,IAASH,QAAQ,CAACG,GAAD,CADvB,EAECC,KAFD,CAEQC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;EAGD,CAJQ,EAIN,CAACN,KAAD,CAJM,CAAT,CALa,CASA;;EAGb,MAAMS,aAAa,GAAG,MAAOC,CAAP,IAAa;IAAE;IACnC,MAAMC,OAAO,GAAGT,WAAW,CAACU,OAAZ,CAAoBC,KAApC;IACA,IAAIF,OAAO,KAAK,EAAhB,EAAoB;IACpB,MAAMG,OAAO,GAAG;MAACH,OAAO,EAAEA,OAAV;MAAmBI,QAAQ,EAAE;IAA7B,CAAhB;IACAd,QAAQ,CAACD,KAAK,IAAI;MACjB,OAAO,CAAC,GAAGA,KAAJ,EAAWc,OAAX,CAAP;IACF,CAFS,CAAR,CAJiC,CAOnC;;IACEhB,OAAO,CAACgB,OAAD,CAAP;IAGFZ,WAAW,CAACU,OAAZ,CAAoBC,KAApB,GAA4B,IAA5B,CAXmC,CAWF;IACjC;;IACAN,OAAO,CAACC,GAAR,CAAYR,KAAZ;EACC,CAdD,CAZa,CA6Bb;;;EACA,MAAMgB,cAAc,GAAIC,EAAD,IAAQ;IAC7B,MAAMC,QAAQ,GAAG,CAAC,GAAGlB,KAAJ,CAAjB;IACA,MAAMmB,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAcD,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYA,EAAlC,CAAb;IACAE,IAAI,CAACJ,QAAL,GAAgB,CAACI,IAAI,CAACJ,QAAtB;IACAd,QAAQ,CAACiB,QAAD,CAAR;EACD,CALD,CA9Ba,CAqCb;;;EAEF,oBACA;IAAA,wBACE,QAAC,QAAD;MAAU,KAAK,EAAElB,KAAjB;MAAwB,cAAc,EAAEgB;IAAxC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,GAAG,EAAEd,WAAZ;MAAyB,IAAI,EAAC;IAA9B;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAEO,aAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAA,WAAMT,KAAK,CAACqB,MAAZ;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA,gBADA;AASC;;GAhDQtB,G;;KAAAA,G;AAkDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}